#!/usr/bin/env php
<?php

use App\Kernel;
use Symfony\Component\Dotenv\Dotenv;
use Symfony\Component\ErrorHandler\Debug;
use Symfony\Component\HttpFoundation\Request;

require dirname(__DIR__) . '/vendor/autoload.php';

if (!class_exists(Dotenv::class)) {
    throw new \RuntimeException('Symfony Dotenv component is not installed. Try running "composer require symfony/dotenv".');
}

// Load cached env vars if the .env.local.php file exists
if (is_array($env = @include dirname(__DIR__).'/.env.local.php')) {
    foreach ($env as $k => $v) {
        $_ENV[$k] = $_ENV[$k] ?? $v;
        $_SERVER[$k] = $_SERVER[$k] ?? $v;
    }
} elseif (file_exists(dirname(__DIR__).'/.env')) {
    (new Dotenv())->loadEnv(dirname(__DIR__).'/.env');
}

$env = $_SERVER['APP_ENV'] ?? 'dev';
$debug = ($_SERVER['APP_DEBUG'] ?? '1') !== '0';

if ($debug) {
    umask(0000);
    Debug::enable();
}

$kernel = new Kernel($env, $debug);
$application = new Symfony\Bundle\FrameworkBundle\Console\Application($kernel);
$application->run();
